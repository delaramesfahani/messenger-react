{"ast":null,"code":"var _jsxFileName = \"/Users/delaram/Desktop/messenger-react-class/messenger-react/src/component/messenger/chatBox.js\";\nimport React from 'react';\nimport './../../css/chat.css';\nimport { connect } from 'react-redux';\nimport { editMessage } from './../../action/convAction';\n\nvar editPenUrl = require('./../imgs/editpen.png');\n\nclass Box extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      editMode: tr,\n      selectedMsg: -1\n    };\n  }\n\n  editHandler(e, index) {\n    this.props.dispatch(editMessage(e.this.target.value, index));\n    this.setState({\n      editMode: true\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.messageList.map((message, index) => {\n      if (message.sender === 1) {\n        console.log('gooooz', this.props);\n\n        if (!(this.state.editMode && this.state.selectedMsg === index)) {\n          return React.createElement(\"div\", {\n            key: index,\n            className: \"sender\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, message.text), React.createElement(\"img\", {\n            src: editPenUrl,\n            alt: \"edit\",\n            className: \"editPen\",\n            title: \"edit\",\n            onClick: this.setState({\n              editMode: true,\n              selectedMsg: index\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }));\n        } else {\n          return React.createElement(\"input\", {\n            key: index,\n            type: \"text\",\n            value: message.text,\n            onChange: e => this.editHandler(e, index),\n            onBlur: () => this.setState({\n              editMode: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          });\n        }\n      } else {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"receiver\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, message.text));\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  messageList: state.messageList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch: dispatch\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Box);","map":{"version":3,"sources":["/Users/delaram/Desktop/messenger-react-class/messenger-react/src/component/messenger/chatBox.js"],"names":["React","connect","editMessage","editPenUrl","require","Box","Component","constructor","state","editMode","tr","selectedMsg","editHandler","e","index","props","dispatch","this","target","value","setState","render","messageList","map","message","sender","console","log","text","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './../../css/chat.css'\nimport { connect } from 'react-redux'\nimport { editMessage } from './../../action/convAction'\n\nvar editPenUrl = require('./../imgs/editpen.png')\n\nclass Box extends React.Component{\n    constructor() {\n        super()\n        this.state = {\n            editMode: tr,\n            selectedMsg: -1\n    \n        }\n    }\n    \n    editHandler (e,index) {\n        this.props.dispatch(editMessage(e.this.target.value, index))\n        this.setState({editMode : true})\n    }\n\n    render() {\n        return(\n            <div className=\"box\">\n                \n        {\n                this.props.messageList.map((message, index) => {\n                    if (message.sender === 1) {\n                        console.log('gooooz',this.props)\n                        if(!(this.state.editMode && this.state.selectedMsg === index)) {\n                    return (\n                        <div key={index} className='sender'>\n                            <span>{message.text}</span>\n                            <img \n                            src={editPenUrl}\n                            alt=\"edit\" \n                            className=\"editPen\" \n                            title=\"edit\" \n                            onClick={this.setState({editMode: true, selectedMsg: index })}\n                            />\n                        </div>\n                    )\n                        } else {\n                            return (\n                            <input\n                                key={index}\n                                type=\"text\"\n                                value={message.text}\n                                onChange={(e) => this.editHandler(e, index)}       \n                                onBlur={() => this.setState({ editMode: false })}\n                            />\n                            )\n                            \n                        }\n                    } else {\n                    return (\n                        <div key={index} className='receiver'>\n                            <span>{message.text}</span>\n                        </div>\n                        )\n                    }\n                \n                })\n        }\n\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n  messageList: state.messageList\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatch : dispatch\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Box)\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/delaram/Desktop/messenger-react-class/messenger-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst Init = {\n  firstName: '',\n  lastName: '',\n  messageList: [],\n  conversationList: [],\n  conversation_id: '',\n  messages\n};\n\nconst conversation = (state = Init, action) => {\n  switch (action.type) {\n    case 'SAVE_SELECTED_USER_NAME':\n      return _objectSpread({}, state, {\n        firstName: action.name,\n        lastName: action.family,\n        image: action.image\n      });\n\n    case 'SEND_NEW_MESSAGE':\n      return _objectSpread({}, state, {\n        messageList: [...state.messageList, {\n          text: action.newMessage,\n          date: new Date().getHours() + ':' + new Date().getMinutes()\n        }]\n      });\n\n    case 'CREATE_NEW_CONVERSATION':\n      return _objectSpread({}, state, {\n        conversationList: [{\n          firstName: action.payload,\n          lastName: '',\n          latestMessage: '',\n          unseenMessage: '',\n          profile: 'http://....'\n        }, ...state.conversationList]\n      });\n\n    case 'CONVERSATION_SHOW':\n      return _objectSpread({}, state, {\n        conversationList: action.conversations\n      });\n\n    case 'OPEN_CONVERSATION':\n      return _objectSpread({}, state, {\n        id: action.id\n      });\n\n    case 'GET_CONVERSATION_ID':\n      return _objectSpread({}, state, {\n        id: action.id\n      });\n\n    case 'GET_MESSAGE_LIST':\n      return _objectSpread({}, state, {\n        messages: [action.messages]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default conversation;","map":{"version":3,"sources":["/Users/delaram/Desktop/messenger-react-class/messenger-react/src/reducer/convReducer.js"],"names":["Init","firstName","lastName","messageList","conversationList","conversation_id","messages","conversation","state","action","type","name","family","image","text","newMessage","date","Date","getHours","getMinutes","payload","latestMessage","unseenMessage","profile","conversations","id"],"mappings":";;;;;;AAAA,MAAMA,IAAI,GAAG;AACXC,EAAAA,SAAS,EAAE,EADA;AAEXC,EAAAA,QAAQ,EAAE,EAFC;AAGXC,EAAAA,WAAW,EAAE,EAHF;AAIXC,EAAAA,gBAAgB,EAAE,EAJP;AAKXC,EAAAA,eAAe,EAAE,EALN;AAMXC,EAAAA;AANW,CAAb;;AASA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,IAAT,EAAeS,MAAf,KAA0B;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,yBAAL;AACE,+BACKF,KADL;AAEEP,QAAAA,SAAS,EAAEQ,MAAM,CAACE,IAFpB;AAGET,QAAAA,QAAQ,EAAEO,MAAM,CAACG,MAHnB;AAIEC,QAAAA,KAAK,EAAEJ,MAAM,CAACI;AAJhB;;AAOF,SAAK,kBAAL;AACE,+BACKL,KADL;AAEEL,QAAAA,WAAW,EAAE,CACX,GAAGK,KAAK,CAACL,WADE,EAEX;AACEW,UAAAA,IAAI,EAAEL,MAAM,CAACM,UADf;AAEEC,UAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,QAAX,KAAwB,GAAxB,GAA8B,IAAID,IAAJ,GAAWE,UAAX;AAFtC,SAFW;AAFf;;AAUF,SAAK,yBAAL;AACE,+BACKX,KADL;AAEEJ,QAAAA,gBAAgB,EAAE,CAChB;AACEH,UAAAA,SAAS,EAAEQ,MAAM,CAACW,OADpB;AAEElB,UAAAA,QAAQ,EAAE,EAFZ;AAGEmB,UAAAA,aAAa,EAAE,EAHjB;AAIEC,UAAAA,aAAa,EAAE,EAJjB;AAKEC,UAAAA,OAAO,EAAE;AALX,SADgB,EAQhB,GAAGf,KAAK,CAACJ,gBARO;AAFpB;;AAaF,SAAK,mBAAL;AACE,+BACKI,KADL;AAEEJ,QAAAA,gBAAgB,EAAEK,MAAM,CAACe;AAF3B;;AAKF,SAAK,mBAAL;AACE,+BACKhB,KADL;AAEEiB,QAAAA,EAAE,EAAEhB,MAAM,CAACgB;AAFb;;AAIF,SAAK,qBAAL;AACE,+BACKjB,KADL;AAEEiB,QAAAA,EAAE,EAAEhB,MAAM,CAACgB;AAFb;;AAIF,SAAK,kBAAL;AACE,+BACKjB,KADL;AAEEF,QAAAA,QAAQ,EAAE,CAACG,MAAM,CAACH,QAAR;AAFZ;;AAKF;AACE,aAAOE,KAAP;AAzDJ;AA2DD,CA5DD;;AA6DA,eAAeD,YAAf","sourcesContent":["const Init = {\n  firstName: '',\n  lastName: '',\n  messageList: [],\n  conversationList: [],\n  conversation_id: '',\n  messages\n}\n\nconst conversation = (state = Init, action) => {\n  switch (action.type) {\n    case 'SAVE_SELECTED_USER_NAME':\n      return {\n        ...state,\n        firstName: action.name,\n        lastName: action.family,\n        image: action.image\n      }\n\n    case 'SEND_NEW_MESSAGE':\n      return {\n        ...state,\n        messageList: [\n          ...state.messageList,\n          {\n            text: action.newMessage,\n            date: new Date().getHours() + ':' + new Date().getMinutes()\n          }\n        ]\n      }\n    case 'CREATE_NEW_CONVERSATION':\n      return {\n        ...state,\n        conversationList: [\n          {\n            firstName: action.payload,\n            lastName: '',\n            latestMessage: '',\n            unseenMessage: '',\n            profile: 'http://....'\n          },\n          ...state.conversationList\n        ]\n      }\n    case 'CONVERSATION_SHOW':\n      return {\n        ...state,\n        conversationList: action.conversations\n\n      }\n    case 'OPEN_CONVERSATION':\n      return {\n        ...state,\n        id: action.id\n      }\n    case 'GET_CONVERSATION_ID' :\n      return {\n        ...state,\n        id: action.id\n      }\n    case 'GET_MESSAGE_LIST' :\n      return {\n        ...state,\n        messages: [action.messages]\n      }\n\n    default:\n      return state\n  }\n}\nexport default conversation\n"]},"metadata":{},"sourceType":"module"}
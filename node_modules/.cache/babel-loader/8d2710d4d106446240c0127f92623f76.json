{"ast":null,"code":"var _jsxFileName = \"/Users/delaram/Desktop/messenger-react-class/messenger-react/src/component/messenger/chatBox.js\";\nimport React from 'react';\nimport './../../css/chat.css';\nimport { connect } from 'react-redux';\nimport { editMessage } from './../../action/convAction';\n\nvar editPenUrl = require('./../imgs/editpen.png');\n\nclass Box extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      editMode: false,\n      selectedMsg: -1\n    };\n  }\n\n  editHandler(e, index) {\n    this.props.dispatch(editMessage(e.this.target.value, index));\n    this.setState({\n      editMode: true\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.props.messageList.map((message, index) => {\n      if (message.sender === 1) {\n        if (!(this.state.editMode && this.state.selectedMsg === index)) {\n          return React.createElement(\"div\", {\n            key: index,\n            className: \"sender\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, message.text), React.createElement(\"img\", {\n            src: editPenUrl,\n            alt: \"edit\",\n            className: \"editPen\",\n            title: \"edit\",\n            onClick: this.setState({\n              editMode: true,\n              selectedMsg: index\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }));\n        } else {\n          return React.createElement(\"input\", {\n            key: index,\n            type: \"text\",\n            value: message.text,\n            onChange: e => this.editHandler(e, index),\n            onBlur: () => this.setState({\n              editMode: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          });\n        }\n      } else {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"receiver\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, message.text));\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  messageList: state.messageList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch: dispatch\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Box);","map":{"version":3,"sources":["/Users/delaram/Desktop/messenger-react-class/messenger-react/src/component/messenger/chatBox.js"],"names":["React","connect","editMessage","editPenUrl","require","Box","Component","constructor","state","editMode","selectedMsg","editHandler","e","index","props","dispatch","this","target","value","setState","render","messageList","map","message","sender","text","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,uBAAD,CAAxB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAI;AACb;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,WAAW,EAAE,CAAC;AAFH,KAAb;AAID;;AAEDC,EAAAA,WAAW,CAAEC,CAAF,EAAKC,KAAL,EAAY;AACrB,SAAKC,KAAL,CAAWC,QAAX,CAAoBb,WAAW,CAACU,CAAC,CAACI,IAAF,CAAOC,MAAP,CAAcC,KAAf,EAAsBL,KAAtB,CAA/B;AACA,SAAKM,QAAL,CAAc;AAAEV,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACD;;AAEDW,EAAAA,MAAM,GAAI;AACR,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,KAAL,CAAWO,WAAX,CAAuBC,GAAvB,CAA2B,CAACC,OAAD,EAAUV,KAAV,KAAoB;AAC9C,UAAIU,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;AACxB,YAAI,EAAE,KAAKhB,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWE,WAAX,KAA2BG,KAApD,CAAJ,EAAgE;AAC9D,iBACE;AAAK,YAAA,GAAG,EAAEA,KAAV;AAAiB,YAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOU,OAAO,CAACE,IAAf,CADF,EAEE;AAAK,YAAA,GAAG,EAAEtB,UAAV;AAAsB,YAAA,GAAG,EAAC,MAA1B;AAAiC,YAAA,SAAS,EAAC,SAA3C;AAAqD,YAAA,KAAK,EAAC,MAA3D;AAAkE,YAAA,OAAO,EAAE,KAAKgB,QAAL,CAAc;AAAEV,cAAAA,QAAQ,EAAE,IAAZ;AAAkBC,cAAAA,WAAW,EAAEG;AAA/B,aAAd,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF;AAMD,SAPD,MAOO;AACL,iBACE;AACE,YAAA,GAAG,EAAEA,KADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAEU,OAAO,CAACE,IAHjB;AAIE,YAAA,QAAQ,EAAGb,CAAD,IAAO,KAAKD,WAAL,CAAiBC,CAAjB,EAAoBC,KAApB,CAJnB;AAKE,YAAA,MAAM,EAAE,MAAM,KAAKM,QAAL,CAAc;AAAEV,cAAAA,QAAQ,EAAE;AAAZ,aAAd,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;AACF,OAlBD,MAkBO;AACL,eACE;AAAK,UAAA,GAAG,EAAEI,KAAV;AAAiB,UAAA,SAAS,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOU,OAAO,CAACE,IAAf,CADF,CADF;AAKD;AACF,KA1BA,CADH,CADF;AAgCD;;AA/C+B;;AAiDlC,MAAMC,eAAe,GAAIlB,KAAD,KAAY;AAClCa,EAAAA,WAAW,EAAEb,KAAK,CAACa;AADe,CAAZ,CAAxB;;AAIA,MAAMM,kBAAkB,GAAIZ,QAAD,KAAe;AACtCA,EAAAA,QAAQ,EAAGA;AAD2B,CAAf,CAA3B;;AAIA,eAAed,OAAO,CAACyB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CtB,GAA5C,CAAf","sourcesContent":["import React from 'react'\nimport './../../css/chat.css'\nimport { connect } from 'react-redux'\nimport { editMessage } from './../../action/convAction'\n\nvar editPenUrl = require('./../imgs/editpen.png')\n\nclass Box extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      editMode: false,\n      selectedMsg: -1\n    }\n  }\n\n  editHandler (e, index) {\n    this.props.dispatch(editMessage(e.this.target.value, index))\n    this.setState({ editMode: true })\n  }\n\n  render () {\n    return (\n      <div className='box'>         \n        {this.props.messageList.map((message, index) => {\n          if (message.sender === 1) {\n            if (!(this.state.editMode && this.state.selectedMsg === index)) {\n              return (\n                <div key={index} className='sender'>\n                  <span>{message.text}</span>\n                  <img src={editPenUrl} alt='edit' className='editPen' title='edit' onClick={this.setState({ editMode: true, selectedMsg: index })} />\n                </div>\n              )\n            } else {\n              return (\n                <input\n                  key={index}\n                  type=\"text\"\n                  value={message.text}\n                  onChange={(e) => this.editHandler(e, index)}     \n                  onBlur={() => this.setState({ editMode: false })} />\n              )              \n            }\n          } else {\n            return (\n              <div key={index} className='receiver'>\n                <span>{message.text}</span>\n              </div>\n            )\n          }\n        })\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n  messageList: state.messageList\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatch : dispatch\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Box)\n"]},"metadata":{},"sourceType":"module"}
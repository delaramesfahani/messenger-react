{"ast":null,"code":"var _jsxFileName = \"/Users/delaram/Desktop/messenger-react-class/messenger-react/src/component/messenger/chatBox.js\";\nimport React from 'react';\nimport './../../css/chat.css';\nimport { connect } from 'react-redux';\n\nclass Box extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      myId: window.localStorage.getItem('user_id')\n    };\n  }\n\n  componentDidMount() {\n    const chatBox = document.getElementById('chat-box');\n    chatBox.scrollTop = chatBox.scrollHeight;\n  }\n\n  render() {\n    console.log('oskoool::', this.props.m);\n    return React.createElement(\"div\", {\n      className: \"box\",\n      id: \"chat-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.props.messageList.map((message, index) => {\n      return message.map((message, index) => {\n        if (message.sender === this.state.myId) {\n          return React.createElement(\"div\", {\n            key: index,\n            className: \"receiver\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, message.text));\n        } else {\n          return React.createElement(\"div\", {\n            key: index,\n            className: \"sender\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, message.text));\n        }\n      }); // if (item.sender === window.localStorage.getItem('user_id')) {\n      //   return (\n      //     <div key={index} className='receiver'>\n      //       <span>{item.text}</span>\n      //     </div>\n      //   )\n      // } else {\n      //   return (\n      //     <div key={index} className='sender'>\n      //       <span>{item.text}</span>\n      //     </div>\n      //   )\n      // }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  // messageList: state.messageList,\n  messages: state.messages\n}); // const mapDispatchToProps = (dispatch) => ({\n//   dispatch: dispatch\n// })\n\n\nexport default connect(mapStateToProps)(Box);","map":{"version":3,"sources":["/Users/delaram/Desktop/messenger-react-class/messenger-react/src/component/messenger/chatBox.js"],"names":["React","connect","Box","Component","constructor","state","myId","window","localStorage","getItem","componentDidMount","chatBox","document","getElementById","scrollTop","scrollHeight","render","console","log","props","m","messageList","map","message","index","sender","text","mapStateToProps","messages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAI;AACb;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,SAA5B;AADK,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAI;AACnB,UAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAhB;AACAF,IAAAA,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACI,YAA5B;AACD;;AAEDC,EAAAA,MAAM,GAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKC,KAAL,CAAWC,CAApC;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWE,WAAX,CAAuBC,GAAvB,CAA2B,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC9C,aAAQD,OAAO,CAACD,GAAR,CAAY,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACtC,YAAID,OAAO,CAACE,MAAR,KAAmB,KAAKpB,KAAL,CAAWC,IAAlC,EAAwC;AACtC,iBACE;AAAK,YAAA,GAAG,EAAEkB,KAAV;AAAiB,YAAA,SAAS,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOD,OAAO,CAACG,IAAf,CADF,CADF;AAKD,SAND,MAMO;AACL,iBACE;AAAK,YAAA,GAAG,EAAEF,KAAV;AAAiB,YAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOD,OAAO,CAACG,IAAf,CADF,CADF;AAKD;AACF,OAdO,CAAR,CAD8C,CAiB9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KA9BA,CADH,CADF;AAmCD;;AAlD+B;;AAoDlC,MAAMC,eAAe,GAAItB,KAAD,KAAY;AAClC;AACAuB,EAAAA,QAAQ,EAAEvB,KAAK,CAACuB;AAFkB,CAAZ,CAAxB,C,CAKA;AACA;AACA;;;AAEA,eAAe3B,OAAO,CAAC0B,eAAD,CAAP,CAAyBzB,GAAzB,CAAf","sourcesContent":["import React from 'react'\nimport './../../css/chat.css'\nimport { connect } from 'react-redux'\n\nclass Box extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      myId: window.localStorage.getItem('user_id')\n    }\n  }\n\n  componentDidMount () {\n    const chatBox = document.getElementById('chat-box')\n    chatBox.scrollTop = chatBox.scrollHeight\n  }\n\n  render () {\n    console.log('oskoool::', this.props.m)\n    return (\n      <div className='box' id='chat-box'>\n        {this.props.messageList.map((message, index) => {\n          return (message.map((message, index) => {\n            if (message.sender === this.state.myId) {\n              return (\n                <div key={index} className='receiver'>\n                  <span>{message.text}</span>\n                </div>\n              )\n            } else {\n              return (\n                <div key={index} className='sender'>\n                  <span>{message.text}</span>\n                </div>\n              )\n            }\n          }))\n\n          // if (item.sender === window.localStorage.getItem('user_id')) {\n          //   return (\n          //     <div key={index} className='receiver'>\n          //       <span>{item.text}</span>\n          //     </div>\n          //   )\n          // } else {\n          //   return (\n          //     <div key={index} className='sender'>\n          //       <span>{item.text}</span>\n          //     </div>\n          //   )\n          // }\n        })}\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n  // messageList: state.messageList,\n  messages: state.messages\n})\n\n// const mapDispatchToProps = (dispatch) => ({\n//   dispatch: dispatch\n// })\n\nexport default connect(mapStateToProps)(Box)\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/delaram/Desktop/messenger-react-class/src/component/messenger/conversation.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserName } from './../../action/convAction';\n\nclass Conversation extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"conversation\",\n      onClick: () => this.props.dispatch(getUserName(this.props.name, this.props.lastName)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"imgs/img1.jpg\",\n      alt: \"pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, this.props.name, \" \", this.props.lastName), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \" today\")), React.createElement(\"div\", {\n      className: \"info2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.props.latestMessage, \"?\"), React.createElement(\"span\", {\n      className: \"unseen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \" \"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch: dispatch\n});\n\nexport default connect(mapDispatchToProps)(Conversation);","map":{"version":3,"sources":["/Users/delaram/Desktop/messenger-react-class/src/component/messenger/conversation.js"],"names":["React","connect","getUserName","Conversation","Component","render","props","dispatch","name","lastName","latestMessage","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzCC,EAAAA,MAAM,GAAI;AACR,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,QAAX,CAAoBL,WAAW,CAAC,KAAKI,KAAL,CAAWE,IAAZ,EAAkB,KAAKF,KAAL,CAAWG,QAA7B,CAA/B,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAC,eAAT;AAAyB,MAAA,GAAG,EAAC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKH,KAAL,CAAWE,IAAlB,OAAyB,KAAKF,KAAL,CAAWG,QAApC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKH,KAAL,CAAWI,aAAlB,MADF,EAEE;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CALF,CAFF,CADF;AAeD;;AAjBwC;;AAoB3C,MAAMC,kBAAkB,GAAIJ,QAAD,KAAe;AACxCA,EAAAA,QAAQ,EAAEA;AAD8B,CAAf,CAA3B;;AAIA,eAAeN,OAAO,CAACU,kBAAD,CAAP,CAA4BR,YAA5B,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { getUserName } from './../../action/convAction'\n\nclass Conversation extends React.Component {\n  render () {\n    return (\n      <div className='conversation' onClick={() => this.props.dispatch(getUserName(this.props.name, this.props.lastName))} >\n        <img src='imgs/img1.jpg' alt=\"pic\" />\n        <div>\n          <div className='info1'>\n            <span>{this.props.name} {this.props.lastName}</span>\n            <span> today</span>\n          </div>\n          <div className='info2'>\n            <span>{this.props.latestMessage}?</span>\n            <span className='unseen'> </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch: dispatch\n})\n\nexport default connect(mapDispatchToProps)(Conversation)"]},"metadata":{},"sourceType":"module"}
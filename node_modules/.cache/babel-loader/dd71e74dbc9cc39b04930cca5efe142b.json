{"ast":null,"code":"var _jsxFileName = \"/Users/delaram/Desktop/messenger-react-class/src/component/messenger/conversation.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserName } from './../../action/convAction';\nimport Avatar from '@material-ui/core/Avatar';\n\nclass Conversation extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"conversation\",\n      onClick: () => this.props.dispatch(getUserName(this.props.name, this.props.lastName)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"Remy Sharp\",\n      src: \"/static/imgs/avatar/img1.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.props.name, \" \", this.props.lastName), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \" today\")), React.createElement(\"div\", {\n      className: \"info2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.latestMessage, \"?\"), React.createElement(\"span\", {\n      className: \"unseen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \" \", this.props.unseenMessage))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch: dispatch\n});\n\nexport default connect(mapDispatchToProps)(Conversation);","map":{"version":3,"sources":["/Users/delaram/Desktop/messenger-react-class/src/component/messenger/conversation.js"],"names":["React","connect","getUserName","Avatar","Conversation","Component","render","props","dispatch","name","lastName","latestMessage","unseenMessage","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACzCC,EAAAA,MAAM,GAAI;AACR,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,QAAX,CAAoBN,WAAW,CAAC,KAAKK,KAAL,CAAWE,IAAZ,EAAkB,KAAKF,KAAL,CAAWG,QAA7B,CAA/B,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,YAAZ;AAAyB,MAAA,GAAG,EAAC,8BAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKH,KAAL,CAAWE,IAAnC,OAA0C,KAAKF,KAAL,CAAWG,QAArD,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKH,KAAL,CAAWI,aAAlB,MADF,EAEE;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA2B,KAAKJ,KAAL,CAAWK,aAAtC,CAFF,CALF,CAHF,CADF;AAgBD;;AAlBwC;;AAqB3C,MAAMC,kBAAkB,GAAIL,QAAD,KAAe;AACxCA,EAAAA,QAAQ,EAAEA;AAD8B,CAAf,CAA3B;;AAIA,eAAeP,OAAO,CAACY,kBAAD,CAAP,CAA4BT,YAA5B,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { getUserName } from './../../action/convAction'\nimport Avatar from '@material-ui/core/Avatar';\n\nclass Conversation extends React.Component {\n  render () {\n    return (\n      <div className='conversation' onClick={() => this.props.dispatch(getUserName(this.props.name, this.props.lastName))} >\n        {/* <img src='/src/component/imgs/img1.jpg' alt=\"pic\" className=\"profileImg\" /> */}\n        <Avatar alt=\"Remy Sharp\" src=\"/static/imgs/avatar/img1.jpg\"  />\n        <div>\n          <div className='info1'>\n            <span className=\"name\">{this.props.name} {this.props.lastName}</span>\n            <span> today</span>\n          </div>\n          <div className='info2'>\n            <span>{this.props.latestMessage}?</span>\n            <span className='unseen'> {this.props.unseenMessage}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch: dispatch\n})\n\nexport default connect(mapDispatchToProps)(Conversation)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import validation from './../validation/validation';\nimport validatejs from 'validate.js';\nexport default function validate(fieldName, value) {\n  // Validate.js validates your values as an object\n  // e.g. var form = {email: 'email@example.com'}\n  // Line 8-9 creates an object based on the field name and field value\n  var formValues = {};\n  formValues[fieldName] = value; // Line 13-14 creates an temporary form with the validation fields\n  // e.g. var formFields = {\n  //                        email: {\n  //                         presence: {\n  //                          message: 'Email is blank'\n  //                         }\n  //                       }\n\n  var formFields = {};\n  formFields[fieldName] = validation[fieldName]; // The formValues and validated against the formFields\n  // the variable result hold the error messages of the field\n\n  const result = validatejs(formValues, formFields); // If there is an error message, return it!\n\n  if (result) {\n    // Return only the field error message if there are multiple\n    return result[fieldName][0];\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/delaram/Desktop/messenger-react-class/messenger-react/src/validation/validateFunction.js"],"names":["validation","validatejs","validate","fieldName","value","formValues","formFields","result"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,eAAe,SAASC,QAAT,CAAmBC,SAAnB,EAA8BC,KAA9B,EAAqC;AAClD;AACA;AACA;AACA,MAAIC,UAAU,GAAG,EAAjB;AACAA,EAAAA,UAAU,CAACF,SAAD,CAAV,GAAwBC,KAAxB,CALkD,CAOlD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIE,UAAU,GAAG,EAAjB;AACAA,EAAAA,UAAU,CAACH,SAAD,CAAV,GAAwBH,UAAU,CAACG,SAAD,CAAlC,CAfkD,CAiBlD;AACA;;AACA,QAAMI,MAAM,GAAGN,UAAU,CAACI,UAAD,EAAaC,UAAb,CAAzB,CAnBkD,CAqBlD;;AACA,MAAIC,MAAJ,EAAY;AACV;AACA,WAAOA,MAAM,CAACJ,SAAD,CAAN,CAAkB,CAAlB,CAAP;AACD;;AAED,SAAO,IAAP;AACD","sourcesContent":["import validation from './../validation/validation'\nimport validatejs from 'validate.js'\n\nexport default function validate (fieldName, value) {\n  // Validate.js validates your values as an object\n  // e.g. var form = {email: 'email@example.com'}\n  // Line 8-9 creates an object based on the field name and field value\n  var formValues = {}\n  formValues[fieldName] = value\n\n  // Line 13-14 creates an temporary form with the validation fields\n  // e.g. var formFields = {\n  //                        email: {\n  //                         presence: {\n  //                          message: 'Email is blank'\n  //                         }\n  //                       }\n  var formFields = {}\n  formFields[fieldName] = validation[fieldName]\n\n  // The formValues and validated against the formFields\n  // the variable result hold the error messages of the field\n  const result = validatejs(formValues, formFields)\n\n  // If there is an error message, return it!\n  if (result) {\n    // Return only the field error message if there are multiple\n    return result[fieldName][0]\n  }\n\n  return null\n}"]},"metadata":{},"sourceType":"module"}
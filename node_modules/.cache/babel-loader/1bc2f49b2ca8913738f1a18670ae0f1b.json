{"ast":null,"code":"var _jsxFileName = \"/Users/delaram/Desktop/messenger-react-class/messenger-react/src/component/messenger/msgList.js\";\nimport React from 'react';\nimport './../../css/chat.css';\nimport Conversation from './../messenger/conversation';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { createNewConversation } from './../../action/convAction';\nimport { connect } from 'react-redux';\n\nclass List extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      newConv: '',\n      suggestionUsers: [],\n      token: window.localStorage.getItem('token')\n    };\n  }\n\n  handleClick() {\n    this.props.dispatch(createNewConversation(this.state.newConv));\n    this.setState({\n      newConv: ''\n    });\n  }\n\n  render() {\n    console.log('propssss', this.props);\n    return React.createElement(\"div\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search\",\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Fab, {\n      size: \"small\",\n      color: \"secondary\",\n      \"aria-label\": \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))), this.props.conversationList.map((item, index) => React.createElement(Conversation, {\n      key: index,\n      name: item.firstName,\n      lastName: item.lastName,\n      latestMessage: item.latestMessage,\n      unseenMessage: item.unseenMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  conversationList: state.conversationList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch: dispatch\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/Users/delaram/Desktop/messenger-react-class/messenger-react/src/component/messenger/msgList.js"],"names":["React","Conversation","Fab","AddIcon","createNewConversation","connect","List","Component","constructor","state","newConv","suggestionUsers","token","window","localStorage","getItem","handleClick","props","dispatch","setState","render","console","log","conversationList","map","item","index","firstName","lastName","latestMessage","unseenMessage","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,qBAAT,QAAsC,2BAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,GAAI;AACb;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,eAAe,EAAE,EAFN;AAGXC,MAAAA,KAAK,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B;AAHI,KAAb;AAKD;;AAEDC,EAAAA,WAAW,GAAI;AACb,SAAKC,KAAL,CAAWC,QAAX,CAAoBd,qBAAqB,CAAC,KAAKK,KAAL,CAAWC,OAAZ,CAAzC;AACA,SAAKS,QAAL,CAAc;AAAET,MAAAA,OAAO,EAAE;AAAX,KAAd;AACD;;AAEDU,EAAAA,MAAM,GAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKL,KAA7B;AACE,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,QAA7B;AAAsC,MAAA,WAAW,EAAC,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIM,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,OAAV;AAAkB,MAAA,KAAK,EAAC,WAAxB;AAAoC,oBAAW,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJN,CADF,EAUO,KAAKA,KAAL,CAAWM,gBAAX,CAA4BC,GAA5B,CAAgC,CAACC,IAAD,EAAOC,KAAP,KACjC,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,IAAI,EAAED,IAAI,CAACE,SAFb;AAGE,MAAA,QAAQ,EAAEF,IAAI,CAACG,QAHjB;AAIE,MAAA,aAAa,EAAEH,IAAI,CAACI,aAJtB;AAKE,MAAA,aAAa,EAAEJ,IAAI,CAACK,aALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,CAVP,CADF;AAuBD;;AAzC8B;;AA4CnC,MAAMC,eAAe,GAAItB,KAAD,KAAY;AAClCc,EAAAA,gBAAgB,EAAEd,KAAK,CAACc;AADU,CAAZ,CAAxB;;AAIA,MAAMS,kBAAkB,GAAId,QAAD,KAAe;AACxCA,EAAAA,QAAQ,EAAEA;AAD8B,CAAf,CAA3B;;AAIA,eAAeb,OAAO,CAAC0B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C1B,IAA7C,CAAf","sourcesContent":["import React from 'react'\nimport './../../css/chat.css'\nimport Conversation from './../messenger/conversation'\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { createNewConversation } from './../../action/convAction'\nimport { connect } from 'react-redux'\n\nclass List extends React.Component {\n  constructor () {\n    super()\n  \n    this.state = {\n      newConv: '',\n      suggestionUsers: [],\n      token: window.localStorage.getItem('token')\n    }\n  }\n\n  handleClick () {\n    this.props.dispatch(createNewConversation(this.state.newConv))\n    this.setState({ newConv: '' })\n  }\n\n  render () {\n    console.log('propssss' ,this.props)\n      return (\n        <div className=\"list\">\n          <div className=\"searchbar\">\n            <input type=\"text\" className=\"search\" placeholder=\"Search...\" />\n\n              {/*** searchbar on top of conversations ***/}\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"add\">\n                  <AddIcon />\n                </Fab>\n\n              </div>\n             { this.props.conversationList.map((item, index) => (\n              <Conversation\n                key={index}\n                name={item.firstName}\n                lastName={item.lastName}\n                latestMessage={item.latestMessage}\n                unseenMessage={item.unseenMessage} />\n               )\n               )\n            }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n  conversationList: state.conversationList\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch: dispatch\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/delaram/Desktop/messenger-react-class/src/component/messenger/conversation.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserName } from './../../action/convAction';\nimport { get } from 'http';\n\nclass Conversation extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"conversation\",\n      onClick: () => this.props.dispatch(getUserName()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"imgs/img1.jpg\",\n      alt: \"pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"delaram esfahani\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \" today\")), React.createElement(\"div\", {\n      className: \"info2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"chitoriii?\"), React.createElement(\"span\", {\n      className: \"unseen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \" \", this.props.unseenMessage))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch: dispatch\n});\n\nexport default connect(mapDispatchToProps)(Conversation);","map":{"version":3,"sources":["/Users/delaram/Desktop/messenger-react-class/src/component/messenger/conversation.js"],"names":["React","connect","getUserName","get","Conversation","Component","render","props","dispatch","unseenMessage","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,GAAT,QAAoB,MAApB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACzCC,EAAAA,MAAM,GAAI;AACR,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,QAAX,CAAoBN,WAAW,EAA/B,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAC,eAAT;AAAyB,MAAA,GAAG,EAAC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA2B,KAAKK,KAAL,CAAWE,aAAtC,CAFF,CALF,CAFF,CADF;AAeD;;AAjBwC;;AAoB3C,MAAMC,kBAAkB,GAAIF,QAAD,KAAe;AACxCA,EAAAA,QAAQ,EAAEA;AAD8B,CAAf,CAA3B;;AAIA,eAAeP,OAAO,CAACS,kBAAD,CAAP,CAA4BN,YAA5B,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { getUserName } from './../../action/convAction'\nimport { get } from 'http';\n\nclass Conversation extends React.Component {\n  render () {\n    return (\n      <div className='conversation' onClick={() => this.props.dispatch(getUserName())} >\n        <img src='imgs/img1.jpg' alt=\"pic\" />\n        <div>\n          <div className='info1'>\n            <span>delaram esfahani</span>\n            <span> today</span>\n          </div>\n          <div className='info2'>\n            <span>chitoriii?</span>\n            <span className='unseen'> {this.props.unseenMessage}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch: dispatch\n})\n\nexport default connect(mapDispatchToProps)(Conversation)"]},"metadata":{},"sourceType":"module"}
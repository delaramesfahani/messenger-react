{"ast":null,"code":"var _jsxFileName = \"/Users/delaram/Desktop/messenger-react-class/messenger-react/src/component/messenger/conversation.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserName } from './../../action/convAction';\n\nvar profileUrl = require('./../imgs/avatar.png');\n\nclass Conversation extends React.Component {\n  handleClick() {\n    this.props.dispatch(getUserName(this.props.name, this.props.family));\n    this.props.onClick();\n  }\n\n  render() {\n    console.log('fuuck:', this.props);\n    return React.createElement(\"div\", {\n      className: \"conversation\",\n      onClick: () => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: profileUrl,\n      alt: \"profile\",\n      className: \"profileImg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"infoContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.name), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.props.id)), React.createElement(\"div\", {\n      className: \"info2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" \"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch: dispatch\n});\n\nexport default connect(mapDispatchToProps)(Conversation);","map":{"version":3,"sources":["/Users/delaram/Desktop/messenger-react-class/messenger-react/src/component/messenger/conversation.js"],"names":["React","connect","getUserName","profileUrl","require","Conversation","Component","handleClick","props","dispatch","name","family","onClick","render","console","log","id","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AACA,IAAIC,UAAU,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,GAAI;AACb,SAAKC,KAAL,CAAWC,QAAX,CAAoBP,WAAW,CAAC,KAAKM,KAAL,CAAWE,IAAZ,EAAkB,KAAKF,KAAL,CAAWG,MAA7B,CAA/B;AACA,SAAKH,KAAL,CAAWI,OAAX;AACD;;AAEDC,EAAAA,MAAM,GAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKP,KAA3B;AACA,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,OAAO,EAAE,MAAM,KAAKD,WAAL,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEJ,UAAV;AAAsB,MAAA,GAAG,EAAC,SAA1B;AAAoC,MAAA,SAAS,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKK,KAAL,CAAWE,IAAnC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKF,KAAL,CAAWQ,EAAlB,CAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CALF,CAFF,CADF;AAeD;;AAvBwC;;AA0B3C,MAAMC,kBAAkB,GAAIR,QAAD,KAAe;AACxCA,EAAAA,QAAQ,EAAEA;AAD8B,CAAf,CAA3B;;AAIA,eAAeR,OAAO,CAACgB,kBAAD,CAAP,CAA4BZ,YAA5B,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { getUserName } from './../../action/convAction'\nvar profileUrl = require('./../imgs/avatar.png')\n\nclass Conversation extends React.Component {\n  handleClick () {\n    this.props.dispatch(getUserName(this.props.name, this.props.family))\n    this.props.onClick()\n  }\n\n  render () {\n    console.log('fuuck:', this.props)\n    return (\n      <div className='conversation' onClick={() => this.handleClick()}>\n        <img src={profileUrl} alt='profile' className='profileImg' />\n        <div className='infoContainer'>\n          <div className='info1'>\n            <span className='name'>{this.props.name}</span>\n            <span>{this.props.id}</span>\n          </div>\n          <div className='info2'>\n            <span> </span>\n            {/* <span className='unseen'> {this.props.unseenMessage}</span> */}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch: dispatch\n})\n\nexport default connect(mapDispatchToProps)(Conversation)\n"]},"metadata":{},"sourceType":"module"}
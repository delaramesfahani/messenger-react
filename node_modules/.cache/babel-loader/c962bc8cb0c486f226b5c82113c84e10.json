{"ast":null,"code":"var _jsxFileName = \"/Users/delaram/Desktop/messenger-react-class/messenger-react/src/component/messenger/conversation.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserName } from './../../action/convAction'; // import { openConversation } from './../../action/convAction'\n\nimport { getConversationId, getMessageList } from './../../action/convAction';\nimport axios from 'axios';\n\nvar profileUrl = require('./../imgs/avatar.png');\n\nclass Conversation extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      token: window.localStorage.getItem('token')\n    };\n  }\n\n  handleOpenConversation() {\n    console.log('whaaaat', this.props);\n    this.props.dispatch(getUserName(this.props.name, this.props.family)); // this.props.dispatch(getConversationId(this.props.conversationList[this.props.item].id))\n    // this.props.dispatch(openConversation())\n\n    const fdata = new FormData();\n    fdata.append('token', this.state.token);\n    fdata.append('conversation_id', this.props.conversation_id);\n    fdata.append('size', 10);\n    fdata.append('date', (new Date().getTime() / 1000).toFixed(0));\n    axios.post('https://api.paywith.click/conversation/details/', fdata).then(response => {\n      console.log('details::', response.data);\n      this.props.dispatch(getMessageList(response.data.data.messages));\n    }).catch(function (error) {\n      console.log('detailsError::', error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"conversation\",\n      onClick: () => this.handleOpenConversation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: profileUrl,\n      alt: \"profile\",\n      className: \"profileImg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"infoContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.name), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"id: \", this.props.id)), React.createElement(\"div\", {\n      className: \"info2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch: dispatch\n});\n\nexport default connect(mapDispatchToProps)(Conversation);","map":{"version":3,"sources":["/Users/delaram/Desktop/messenger-react-class/messenger-react/src/component/messenger/conversation.js"],"names":["React","connect","getUserName","getConversationId","getMessageList","axios","profileUrl","require","Conversation","Component","constructor","state","token","window","localStorage","getItem","handleOpenConversation","console","log","props","dispatch","name","family","fdata","FormData","append","conversation_id","Date","getTime","toFixed","post","then","response","data","messages","catch","error","render","id","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { getUserName } from './../../action/convAction'\n// import { openConversation } from './../../action/convAction'\nimport { getConversationId, getMessageList } from './../../action/convAction'\nimport axios from 'axios'\n\nvar profileUrl = require('./../imgs/avatar.png')\n\nclass Conversation extends React.Component {\n  constructor () {\n    super()\n\n    this.state = {\n      token: window.localStorage.getItem('token')\n    }\n  }\n\n  handleOpenConversation () {\n    console.log('whaaaat', this.props)\n\n    this.props.dispatch(getUserName(this.props.name, this.props.family))\n    // this.props.dispatch(getConversationId(this.props.conversationList[this.props.item].id))\n\n    // this.props.dispatch(openConversation())\n    const fdata = new FormData()\n    fdata.append('token', this.state.token)\n    fdata.append('conversation_id', this.props.conversation_id)\n    fdata.append('size', 10)\n    fdata.append('date', (new Date().getTime() / 1000).toFixed(0))\n\n    axios.post('https://api.paywith.click/conversation/details/', fdata)\n\n      .then((response) => {\n        console.log('details::', response.data)\n        this.props.dispatch((getMessageList(response.data.data.messages)))\n      })\n      .catch(function (error) {\n        console.log('detailsError::', error)\n      })\n  }\n\n  render () {\n    return (\n      <div className='conversation' onClick={() => this.handleOpenConversation()}>\n        <img src={profileUrl} alt='profile' className='profileImg' />\n        <div className='infoContainer'>\n          <div className='info1'>\n            <span className='name'>{this.props.name}</span>\n            <span>id: {this.props.id}</span>\n          </div>\n          <div className='info2'>\n            <span />\n            {/* <span className='unseen'> {this.props.unseenMessage}</span> */}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch: dispatch\n})\n\nexport default connect(mapDispatchToProps)(Conversation)\n"]},"metadata":{},"sourceType":"module"}